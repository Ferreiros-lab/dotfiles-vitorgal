""""" required options for vundle
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'

" my bundles
" themes
Bundle 'nelstrom/vim-blackboard'
Bundle 'altercation/vim-colors-solarized'
" toggle comments by typing 'gc'
Bundle 'tpope/vim-commentary'
" surround text with pairs like (), for example by visually selecting and doing S}
Bundle 'tpope/vim-surround'
" haml and sass support
Bundle 'tpope/vim-haml'
" markdown syntax
Bundle 'tpope/vim-markdown'
" some handy mappings (useful for text bubbling — see custom mappings down)
Bundle 'tpope/vim-unimpaired'
" html5 and inline svg omnicomplete funtion, indent and syntax
Bundle 'othree/html5.vim'
" processing bundle
Bundle 'sophacles/vim-processing'
" textmate-style snippets
Bundle 'msanders/snipmate.vim'
" auto-close pairs like () and []
Bundle 'Townk/vim-autoclose'
" multiple cursors
Bundle 'terryma/vim-multiple-cursors'
" fuzzy file finder
Bundle 'kien/ctrlp.vim'
" directory tree explorer
Bundle 'scrooloose/nerdtree'
" insert mode completions with <tab>
Bundle 'ervandew/supertab'
" syntax checker
Bundle 'scrooloose/syntastic'
" extend motions (eg <leader><leader>w)
Bundle 'Lokaltog/vim-easymotion'
" list, select and switch between buffers
Bundle 'jeetsukumaran/vim-buffergator'

"""""
""""" general options
set backspace=indent,eol,start " fixes backspace behaviour
filetype plugin indent on " respects commands and indents from plugins and filetypes
set nocompatible " stops from behaving in a vi compatible way
syntax enable " color code syntax
colorscheme solarized " colorscheme
" theme for GUI
if has ('gui_running')
	colorscheme blackboard
endif
set background=dark " background
set number " line numbers
set ruler " show the line number on the bar
set autoread " watch for file changes
set guioptions-=T " remove toolbar on GUI
set guioptions-=r " remove right-hand scroll bar on GUI
set guifont=Source\ Code\ Pro:h11 " font on GUI (macvim)
set autoindent " auto indent code
set tabstop=4 " how many columns (spaces) a tab counts for
set softtabstop=4 " how many columns (spaces) a tab will convert to
set shiftwidth=4 " how many columns (spaces) text is reindented
set incsearch " highlights search matches as they are typed
set nofoldenable " disables code folding
set listchars=tab:▸\ ,eol:¬ " use the same symbols as TextMate for tabstops and EOLs
" source the vimrc file after saving it
if has("autocmd")
  autocmd bufwritepost .vimrc source $MYVIMRC
endif

"""""
""""" mappings
let mapleader=',' " maps '<leader>' to ','
" map split window navigation to <leader> + arrow_direction
nmap <leader><up> <C-w><up>
nmap <leader><right> <C-w><right>
nmap <leader><down> <C-w><down>
nmap <leader><left> <C-w><left>
" map split window resizing options
nmap <leader>+ <C-w>+
nmap <leader>- <C-w>-
nmap <leader>< <C-w><
nmap <leader>> <C-w>>
nmap <leader>= <C-w>=
" map changing split windows from vertical to horizontal and the reverse
nmap <leader>- <C-w>t <C-w>H
nmap <leader>_ <C-w>t <C-w>K
" navigate between tabs like in chrome
map <D-A-right> gt
map <D-A-left> gT
" show and hide invisibles (tabs, EOL)
nmap <leader>i :set list!<cr>
" toggle spell checking on and off with '<leader>s' and set region to en_gb
nmap <silent> <leader>s :set spell!<cr>:set spelllang=en_gb<cr>
" toggle search highlight with <leader>h
nmap <leader>h :set hlsearch!<cr>

"""""
""""" set autocompletions and plugin-specific options
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS

" sophacles/vim-processing
let g:use_processing_java=1 " uses processing_java to run skectches
" map <leader> + b to run skectches
map <leader>b :call RunProcessing()<CR>

" tpope/unimpaired
" Bubble single lines
nmap <C-Up> [e
nmap <C-Down> ]e
" Bubble multiple lines
vmap <C-Up> [egv
vmap <C-Down> ]egv
