" required options for vundle
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'

" my bundles
Bundle 'altercation/vim-colors-solarized'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-ragtag'
Bundle 'vim-scripts/tComment'
Bundle 'othree/html5.vim'
Bundle 'sophacles/vim-processing'

"""""
" general options
set backspace=indent,eol,start " fixes backspace behaviour
filetype plugin on " allows running commands from plugins
set nocompatible " stops from behaving in a vi compatible way
syntax enable " color code syntax
colorscheme solarized " colorscheme
set background=dark " background
set number " line numbers
set guioptions-=T " remove toolbar on GUI
set guioptions-=r " remove right-hand scroll bar on GUI
set autoindent " auto indent code
set tabstop=4 " how many columns (spaces) a tab counts for
set shiftwidth=4 " how many columns (spaces) text is reindented
set incsearch " highlights search matches as they are typed
set nofoldenable " disables code folding

"""""
" set autocompletions and language specific options
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS

" processing
let g:use_processing_java=1 " uses processing_java to run skectches
" map Ctrl+b to run skectches
map <C-b> :call RunProcessing()<CR>

"""""
" map the Tab key in a clever way for code completion
function! SuperCleverTab()
    if strpart(getline('.'), 0, col('.') - 1) =~ '^\s*$'
        return "\<Tab>"
    else
        if &omnifunc != ''
            return "\<C-X>\<C-O>"
        elseif &dictionary != ''
            return "\<C-K>"
        else
            return "\<C-N>"
        endif
    endif
endfunction

inoremap <Tab> <C-R>=SuperCleverTab()<cr>
