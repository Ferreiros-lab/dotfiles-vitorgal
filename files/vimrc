""""" required options for vundle
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'

" my bundles
" themes
Bundle 'altercation/vim-colors-solarized'
Bundle 'morhetz/gruvbox'
" toggle comments by typing 'gc'
Bundle 'tpope/vim-commentary'
" surround text with pairs like (), for example by visually selecting and doing S}
Bundle 'tpope/vim-surround'
" some handy mappings (useful for text bubbling — see custom mappings down)
Bundle 'tpope/vim-unimpaired'
" git wrapper
Bundle 'tpope/vim-fugitive'
" markdown syntax
Bundle 'tpope/vim-markdown'
" jade syntax
Bundle 'digitaltoad/vim-jade'
" scss syntax
Bundle 'cakebaker/scss-syntax.vim'
" html5 and inline svg omnicomplete funtion, indent and syntax
Bundle 'othree/html5.vim'
" processing bundle
Bundle 'sophacles/vim-processing'
" textmate-style snippets
Bundle 'SirVer/ultisnips'
" visually select text and press '*' and '#' to search for it
Bundle 'nelstrom/vim-visual-star-search'
" auto-close pairs like () and []
Bundle 'vim-scripts/AutoClose'
" multiple cursors
Bundle 'terryma/vim-multiple-cursors'
" fuzzy file finder
Bundle 'kien/ctrlp.vim'
" directory tree explorer
Bundle 'scrooloose/nerdtree'
" automatically open popup menu for completions
Bundle 'Valloric/YouCompleteMe'
" more intuitive interface for the undo tree, call with :GundoToggle
Bundle 'sjl/gundo.vim'
" syntax checker
Bundle 'scrooloose/syntastic'
" extend motions (eg <leader><leader>w)
Bundle 'Lokaltog/vim-easymotion'
" list, select and switch between buffers
Bundle 'jeetsukumaran/vim-buffergator'

"""""
""""" general options
set backspace=indent,eol,start " fixes backspace behaviour
filetype plugin indent on " respects commands and indents from plugins and filetypes
set nocompatible " stops from behaving in a vi compatible way
syntax enable " color code syntax
colorscheme solarized " colorscheme
" colorscheme for GUI
if has ('gui_running')
	colorscheme gruvbox
endif
set guioptions-=T " remove toolbar on GUI
set guioptions-=r " remove right-hand scroll bar on GUI
set guifont=Source\ Code\ Pro:h11 " font on GUI (macvim)
set background=dark " background
set cursorline " highlights the line the cursor is in
"set number " line numbers
set relativenumber " line numbers relative to the current line
set ruler " show the line number on the bar
set showcmd " show exta information on the bar, like the number of selected lines
set wildmenu " show completions in command mode
set wildmode=list:longest,full " in command mode, press <tab> once to show alternatives, and again to cycle
set autoread " watch for file changes
set autoindent " auto-indent code
set scrolloff=5 " allows show at least 3 extra lines before/after the cursor
set tabstop=4 " how many columns (spaces) a tab counts for
set softtabstop=4 " how many columns (spaces) a tab will convert to
set shiftwidth=4 " how many columns (spaces) text is reindented
set expandtab " convert tabs to spaces
set incsearch " highlights search matches as they are typed
set nofoldenable " disables code folding
set listchars=tab:▸\ ,eol:¬ " use the same symbols as TextMate for tabstops and EOLs
" source the vimrc file after saving it
if has("autocmd")
	autocmd bufwritepost .vimrc source $MYVIMRC
endif

"""""
""""" mappings
" map split window navigation to <leader> + arrow_direction
nnoremap <leader><up> <C-w><up>
nnoremap <leader><right> <C-w><right>
nnoremap <leader><down> <C-w><down>
nnoremap <leader><left> <C-w><left>
" map split window resizing options
nnoremap <leader>+ <C-w>+
nnoremap <leader>- <C-w>-
nnoremap <leader>< <C-w><
nnoremap <leader>> <C-w>>
nnoremap <leader>= <C-w>=
" map exchange window with its neighbour
nnoremap <leader>x <C-w>x
" map changing split windows from vertical to horizontal and the reverse
nnoremap <leader>- <C-w>t <C-w>H
nnoremap <leader>_ <C-w>t <C-w>K
" navigate between tabs like in chrome
noremap <D-A-right> gt
noremap <D-A-left> gT
" go back and forth on the jumplist
nnoremap g<left> <C-o>
nnoremap g<right> <C-i>
" show and hide invisibles (tabs, EOL)
nnoremap <leader>i :set list!<cr>
" toggle spell checking on and off with '<leader>s' and set region to en_gb
nnoremap <silent> <leader>s :set spell!<cr>:set spelllang=en_gb<cr>
" toggle search highlight with <leader>h
nnoremap <leader>h :set hlsearch!<cr>
" type 'NO' to type normal mode commands in command mode
nnoremap NO :normal 
" make ' behave like ` to prevent weird keyboard issues
nnoremap ' `
" delete without yanking
nnoremap <leader>d "_d
vnoremap <leader>d "_d
" press <leader>p to paste from the clipboard, ignoring auto-indent
nnoremap <leader>p :set paste<cr>"+p:set nopaste<cr>
" with the cursor over a class name, press <leader>c to go to the class on the css/sass
nnoremap <leader>c :execute "vimgrep /" . expand("<cword>") . "/j **" <Bar> cnext<cr>
" then press <leader>n to step through the quick-fix list results
nnoremap <leader>n :cn<cr>

"""""
""""" set plugin-specific options
" sophacles/vim-processing
let g:use_processing_java=1 " uses processing_java to run skectches
" map Cmd + 0 to run skectches
nnoremap <D-0> :w<cr>:RunProcessing<cr>

" tpope/unimpaired
" Bubble single lines
nnoremap <C-Up> [e
nnoremap <C-Down> ]e
" Bubble multiple lines
vnoremap <C-Up> [egv
vnoremap <C-Down> ]egv

" Valloric/YouCompleteMe 
" use only <down> (not also <tab>) to select the next autocomplete suggestion
let g:ycm_key_list_select_completion = ['<Down>']

" Change some settings that may trip Codekit
autocmd FileType jade,scss,sass set nobackup | set nowritebackup | set noswapfile
